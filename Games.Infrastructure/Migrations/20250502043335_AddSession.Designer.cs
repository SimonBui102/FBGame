// <auto-generated />
using System;
using Games.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Games.Infrastructure.Migrations
{
    [DbContext(typeof(GamesDbContext))]
    [Migration("20250502043335_AddSession")]
    partial class AddSession
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Games.Domain.Entities.GameDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxNumber")
                        .HasColumnType("int");

                    b.Property<int>("MinNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GameDefinitions");
                });

            modelBuilder.Entity("Games.Domain.Entities.GameRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Divisor")
                        .HasColumnType("int");

                    b.Property<int?>("GameDefinitionId")
                        .HasColumnType("int");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameDefinitionId");

                    b.ToTable("GameRule");
                });

            modelBuilder.Entity("Games.Domain.Entities.GameSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GameDefinitionId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCorrectAnswer")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfIncorrectAnswer")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GameDefinitionId");

                    b.ToTable("GameSession");
                });

            modelBuilder.Entity("Games.Domain.Entities.GameRule", b =>
                {
                    b.HasOne("Games.Domain.Entities.GameDefinition", "GameDefinition")
                        .WithMany("GameRules")
                        .HasForeignKey("GameDefinitionId");

                    b.Navigation("GameDefinition");
                });

            modelBuilder.Entity("Games.Domain.Entities.GameSession", b =>
                {
                    b.HasOne("Games.Domain.Entities.GameDefinition", "GameDefinition")
                        .WithMany("GameSessions")
                        .HasForeignKey("GameDefinitionId");

                    b.Navigation("GameDefinition");
                });

            modelBuilder.Entity("Games.Domain.Entities.GameDefinition", b =>
                {
                    b.Navigation("GameRules");

                    b.Navigation("GameSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
